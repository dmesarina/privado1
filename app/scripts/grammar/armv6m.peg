{
   function createMetadata(line, column) {
      return {line : line, column : column };
   }
}
start
  = __ program:Program __ { return program; }
  
/* ===== A.1 Lexical Grammar ===== */
 
SourceCharacter
  = .

WhiteSpace "whitespace"
  = [\t\v\f \u00A0\uFEFF]
  / Zs

// Separator, Space
Zs = [\u0020\u00A0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000]

LineTerminator
  = [\n\r\u2028\u2029]

LineTerminatorSequence "end of line"
  = "\n"
  / "\r\n"
  / "\r"
  / "\u2028" // line separator
  / "\u2029" // paragraph separator

Comment "comment"
  = MultiLineComment
  / SingleLineComment

MultiLineComment
  = "/*" (!"*/" SourceCharacter)* "*/"

MultiLineCommentNoLineTerminator
  = "/*" (!("*/" / LineTerminator) SourceCharacter)* "*/"

SingleLineComment
  = "//" (!LineTerminator SourceCharacter)*

/* Whitespace */
_
  = (WhiteSpace / MultiLineCommentNoLineTerminator / SingleLineComment)*

__
  = (WhiteSpace / LineTerminatorSequence / Comment)* 
/*------------------INSTRUCTIONS------------------*/
Program
  = elements:SourceElements? {
	  var element=elements;
	  return element;
    }

SourceElements
  = head:SourceElement tail:(__ SourceElement)* {
      var result = {};
	  result[head.line]=head;
      for (var i = 0; i < tail.length; i++) {
        result[tail[i][1].line]=tail[i][1]; 
      }
      return result;
    }

/*Statement
 */
SourceElement
  =Statement 
  
Statement "instruction"
 =SASMC //Shift, Subtract, Move, Compare
 
SASMC
 =( SASMC_LSLS)
 
/*--------------SASMC INSTRUCTIONS---------------*/
SASMC_LSLS=opcode:"LSLS"i _ RD:LowRegister _ "," _ RM:LowRegister _","_ Imm:Imm5 {
		return {op:opcode.toLowerCase(), rd:RD, rm:RM,imm5:Imm,line:line()};
	}
SASMC_LSRS=opcode:"LSRS"i _ RD:LowRegister _ "," _ RM:LowRegister _","_ Imm:Imm5 {
		return {op:opcode.toLowerCase(), rd:RD, rm:RM,imm5:Imm,line:line()};
	}
SASMC_ASRS=opcode:"ASRS"i _ RD:LowRegister _ "," _ RM:LowRegister _","_ Imm:Imm5 {
		return {op:opcode.toLowerCase(), rd:RD, rm:RM,imm:Imm5,line:line()};
	}
SASMC_ADDS=opcode:"ADDS"i _ RD:LowRegister _ "," _ RN:LowRegister _ "," _ RM:LowRegister _","_ {
		return {op:opcode.toLowerCase(), rd:RD, rn:RN,rm:RM,line:line()};
	}
	/opcode:"ADDS"i _ RD:LowRegister _ "," _ RN:LowRegister _","_ Imm:Imm3 {
		return {op:opcode.toLowerCase(), rd:RD, rn:RN,imm:Imm3,line:line()};
	}
	/opcode:"ADDS"i _ RD:LowRegister _ "," _ Imm:Imm8 {
		return {op:opcode.toLowerCase(), rd:RD,imm:Imm,line:line()};
	}
SASMC_SUBS=opcode:"SUBS"i _ RD:LowRegister _ "," _ RN:LowRegister _ "," _ RM:LowRegister _","_ {
		return {op:opcode.toLowerCase(), rd:RD, rn:RN,rm:RM,line:line()};
	}
	/opcode:"SUBS"i _ RD:LowRegister _ "," _ RN:LowRegister _","_ Imm:Imm3 {
		return {op:opcode.toLowerCase(), rd:RD, rn:RN,imm3:Imm,line:line()}; 
	}
	/opcode:"SUBS"i _ RD:LowRegister _ "," _ Imm:Imm8 {
		return {op:opcode.toLowerCase(), rd:RD,imm8:Imm,line:line()};
	}
SASMC_MOVS=opcode:"MOVS"i _ RD:LowRegister _ "," _ Imm:Imm8{
		return {op:opcode.toLowerCase(), rd:RD,imm8:Imm,line:line()}; 
	}
SASMC_CMP=opcode:"CMP"i _ RD:LowRegister _ "," _ Imm:Imm8{
		return {op:opcode.toLowerCase(), rd:RD,imm8:Imm,line:line()};
	}


/*----------------------------------------GENERATE SP-RELATIVE ADDRESS----------------*/
/*----------------------------------------REGISTERS-----------------------------------*/   
LowRegister "low register"
 =letter:"r"i unit:[0-7]{
	var aux="";
	for (var i = 0; i < letter.length; i++) {
		aux=letter[i].toLowerCase()+unit[i];
	}
	return aux;
  }
 
HighRegister
 =letter:"r"i tenth:[1] unit:[0-2]{
	var aux="";
	for (var i = 0; i < letter.length; i++) {
		aux=letter[i].toLowerCase()+tenth[i]+unit[i];
	}
	return aux;
  }
 /letter:"r"i unit:[8-9]{
	var aux="";
	for (var i = 0; i < letter.length; i++) {
		aux=letter[i].toLowerCase()+unit[i];
	}
	return aux;
  }
 
AllRegisters
 =letter:"r"i tenth:[1] unit:[0-2]{
	var aux="";
	for (var i = 0; i < letter.length; i++) {
		aux=letter[i].toLowerCase()+tenth[i]+unit[i];
	}
	return aux;
  }
 /letter:"r"i unit:[0-9]{
	var aux="";
	for (var i = 0; i < letter.length; i++) {
		aux=letter[i].toLowerCase()+unit[i];
	}
	return aux;
  }
  
 
SP
 =letter:"r"i tenth:[1] unit:[3]{
	var aux="";
	for (var i = 0; i < letter.length; i++) {
		aux=letter[i].toLowerCase()+tenth[i]+unit[i];
	}
	return aux;
  }
 /letter:"sp"i{
	return letter.toLowerCase();
  }

  /*---------------------------------IMMEDIATES-----------------------------------*/
 Imm3 "out of range"
 =hashtag:"#" unit:[0-7]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=unit[i];
	}
	return aux;
 }
 
 Imm5 "out of range"
 =hashtag:"#" tenth:[3] unit:[0-1]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=tenth[i]+unit[i];
	}
	return aux;
 }
 /hashtag:"#" tenth:[1-2] unit:[0-9]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=tenth[i]+unit[i];
	}
	return aux;
 }
 /hashtag:"#" unit:[0-9]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=unit[i];
	}
	return aux;
 }
 
Mul4_Imm5
 =hashtag:"#" hundredth:[1] tenth:[2] unit:[0-4]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=hundredth[i]+tenth[i]+unit[i];
	}
	return aux;
 }
 /hashtag:"#" hundredth:[1] tenth:[0-1] unit:[0-9]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=hundredth[i]+tenth[i]+unit[i];
	}
	return aux;
 }
 /hashtag:"#" tenth:[1-9] unit:[0-9]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=tenth[i]+unit[i];
	}
	return aux;
 }
 /hashtag:"#" unit:[0-9]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=unit[i];
	}
	return aux;
 }

Mul2_Imm5
 =hashtag:"#" tenth:[6] unit:[0-2]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=tenth[i]+unit[i];
	}
	return aux;
 }
 /hashtag:"#" tenth:[1-5] unit:[0-9]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=tenth[i]+unit[i];
	}
	return aux;
 }
 /hashtag:"#" unit:[0-9]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=unit[i];
	}
	return aux;
 }
 
Imm7 "out of range"
 =hashtag:"#" hundredth:[5] tenth:[0] unit:[0-8]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=hundredth[i]+tenth[i]+unit[i];
	}
	return aux;
 }
 /hashtag:"#" hundredth:[1-4] tenth:[0-9] unit:[0-9]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=hundredth[i]+tenth[i]+unit[i];
	}
	return aux;
 }
 /hashtag:"#" tenth:[1-9] unit:[0-9]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=tenth[i]+unit[i];
	}
	return aux;
 }
 /hashtag:"#" unit:[0-9]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=unit[i];
	}
	return aux;
 }
 
 
 Imm8 "out of range"
 =hashtag:"#" hundredth:[2] tenth:[5] unit:[0-5]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=hundredth[i]+tenth[i]+unit[i];
	}
	return aux;
 }
 /hashtag:"#" hundredth:[2] tenth:[0-4] unit:[0-9]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=hundredth[i]+tenth[i]+unit[i];
	}
	return aux;
 }
 /hashtag:"#" hundredth:[1] tenth:[0-9] unit:[0-9]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=hundredth[i]+tenth[i]+unit[i];
	}
	return aux;
 }
 /hashtag:"#" tenth:[1-9] unit:[0-9]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=tenth[i]+unit[i];
	}
	return aux;
 }
 /hashtag:"#" unit:[0-9]{
	var aux="";
	for (var i = 0; i < hashtag.length; i++) {
		aux=unit[i];
	}
	return aux;
 }
/*----------------------------OTHERS-------------------------*/
Label
=c:[a-zA-Z0-9_]+{
	var aux="";
	for (var i = 0; i < c.length; i++) {
		aux+=c[i];
	}
	return aux;
	aux="";
 }